import Foundation
import UIKit

extension UIImage {
    
  func alignOrientationMetadataAndSize() -> UIImage? {
        UIGraphicsBeginImageContextWithOptions(size, false, self.scale)
        let context = UIGraphicsGetCurrentContext()!
        context.translateBy(x: size.width/2, y: size.height/2)
        self.draw(in: CGRect(x: -self.size.width/2, y: -self.size.height/2, width: self.size.width, height: self.size.height))
        let newImage = UIGraphicsGetImageFromCurrentImageContext()
        UIGraphicsEndImageContext()
        return newImage
    }
    
    
    func cropSquare() -> UIImage? {
        
        let isLandscape = imageOrientation == .right ||
            imageOrientation == .left ||
            imageOrientation == .leftMirrored ||
            imageOrientation == .rightMirrored
        
        var rect: CGRect!
        
        let width = isLandscape ? size.height : size.width
        let height = isLandscape ? size.width : size.height
        let side = min(width , height) * 3/4
        rect = CGRect(x: (width - side) / 2, y: (height - side) / 2, width: side, height: side)
        if let imgRef = cgImage?.cropping(to: rect) {
            return UIImage(cgImage: imgRef)
        }
        return nil
    }
}
